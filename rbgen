#!/usr/bin/env ruby

require 'fileutils'

if ARGV.length != 1
  puts "Usage: rbgen <app_name>"
  exit
end

include FileUtils

# Look for a pattern, regexp or string, in a file and replace it with the given
# string.
def sed_i(file, pat, rep)
  File.write(file, File.read(file).gsub(pat, rep))
end

# Project name.
name = ARGV[0]

# Convert project name in snakecase to camelcase to get top-level class name or
# namespace of the project.
nmsp = name.split(/_|-/).map(&:capitalize).join

# Where is this script located on user's system?
loc = File.dirname __FILE__

# Where are the template files?  In a dir called ruby relative to the directory
# this script is located in.
src = File.join loc, 'ruby'

# Where should the template files go? In a dir named same as the app name
# relative to the directory script is run from.
dst = File.expand_path name

# Copy template files as it is.
cp_r src, dst

# cd to where we copied the template files and do some changes in-place.
cd dst

# Some files in a Ruby project are named same as the app name. In the template
# they are all called 'app'. Rename those.
mv 'app.gemspec',      "#{name}.gemspec"
mv 'bin/app',          "bin/#{name}"
mv 'lib/app',          "lib/#{name}"
mv 'lib/app.rb',       "lib/#{name}.rb"
mv 'spec/app_spec.rb', "spec/#{name}_spec.rb"

# App name is used in several places throughout the software. 'App' or 'app' is
# used in all such places in the template. Rename those.
sed_i "#{name}.gemspec",           'app', name
sed_i "bin/#{name}",               'app', name
sed_i "lib/#{name}.rb",            'app', name
sed_i "spec/#{name}_spec.rb",      'app', name
sed_i "bin/#{name}",               'App', nmsp
sed_i "lib/#{name}.rb",            'App', nmsp
sed_i "lib/#{name}/componentA.rb", 'App', nmsp
sed_i "spec/#{name}_spec.rb",      'App', nmsp
